version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: bazaar_nginx
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - bazaar-app
      - minio
    networks:
      - bazaar-network
      
  bazaar-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bazaar_app
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: 5432
      JWT_SIGNATURE: ${JWT_SIGNATURE}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      WAIT_FOR_MINIO: "true"
    ports:
      - "${SERVER_PORT}:8081"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - bazaar-network
    command: sh -c "while ! nc -z minio 9000; do sleep 2; done && ./migrate && ./main"
    deploy:
      replicas: ${APP_REPLICAS:-1}

  db:
    image: postgres:latest
    container_name: bazaar_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - bazaar-network

  minio:
    container_name: minio
    image: 'minio/minio:latest'
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - bazaar-network

  createbuckets:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    network_mode: service:minio
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
      MINIO_USE_SSL: "${MINIO_USE_SSL}"
      MINIO_DEFAULT_BUCKETS: "${MINIO_BUCKET_NAME}"
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set bazaar-minio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb bazaar-minio/${MINIO_BUCKET_NAME};
      /usr/bin/mc anonymous set download bazaar-minio/${MINIO_BUCKET_NAME};
      exit 0;
      "

networks:
  bazaar-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data: