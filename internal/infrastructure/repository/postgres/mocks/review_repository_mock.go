// Code generated by MockGen. DO NOT EDIT.
// Source: review.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/go-park-mail-ru/2025_1_ChillGuys/internal/models"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockIReviewRepository is a mock of IReviewRepository interface.
type MockIReviewRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIReviewRepositoryMockRecorder
}

// MockIReviewRepositoryMockRecorder is the mock recorder for MockIReviewRepository.
type MockIReviewRepositoryMockRecorder struct {
	mock *MockIReviewRepository
}

// NewMockIReviewRepository creates a new mock instance.
func NewMockIReviewRepository(ctrl *gomock.Controller) *MockIReviewRepository {
	mock := &MockIReviewRepository{ctrl: ctrl}
	mock.recorder = &MockIReviewRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIReviewRepository) EXPECT() *MockIReviewRepositoryMockRecorder {
	return m.recorder
}

// AddReview mocks base method.
func (m *MockIReviewRepository) AddReview(ctx context.Context, review models.ReviewDB) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddReview", ctx, review)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddReview indicates an expected call of AddReview.
func (mr *MockIReviewRepositoryMockRecorder) AddReview(ctx, review interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddReview", reflect.TypeOf((*MockIReviewRepository)(nil).AddReview), ctx, review)
}

// GetReview mocks base method.
func (m *MockIReviewRepository) GetReview(ctx context.Context, productID uuid.UUID, offset int) ([]*models.Review, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReview", ctx, productID, offset)
	ret0, _ := ret[0].([]*models.Review)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReview indicates an expected call of GetReview.
func (mr *MockIReviewRepositoryMockRecorder) GetReview(ctx, productID, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReview", reflect.TypeOf((*MockIReviewRepository)(nil).GetReview), ctx, productID, offset)
}
