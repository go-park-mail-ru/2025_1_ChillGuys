// Code generated by MockGen. DO NOT EDIT.
// Source: csat.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/go-park-mail-ru/2025_1_ChillGuys/internal/models"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockICsatRepository is a mock of ICsatRepository interface.
type MockICsatRepository struct {
	ctrl     *gomock.Controller
	recorder *MockICsatRepositoryMockRecorder
}

// MockICsatRepositoryMockRecorder is the mock recorder for MockICsatRepository.
type MockICsatRepositoryMockRecorder struct {
	mock *MockICsatRepository
}

// NewMockICsatRepository creates a new mock instance.
func NewMockICsatRepository(ctrl *gomock.Controller) *MockICsatRepository {
	mock := &MockICsatRepository{ctrl: ctrl}
	mock.recorder = &MockICsatRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICsatRepository) EXPECT() *MockICsatRepositoryMockRecorder {
	return m.recorder
}

// AddSurveySubmission mocks base method.
func (m *MockICsatRepository) AddSurveySubmission(ctx context.Context, surveyID uuid.UUID, answers []models.Answer, userID uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSurveySubmission", ctx, surveyID, answers, userID)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddSurveySubmission indicates an expected call of AddSurveySubmission.
func (mr *MockICsatRepositoryMockRecorder) AddSurveySubmission(ctx, surveyID, answers, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSurveySubmission", reflect.TypeOf((*MockICsatRepository)(nil).AddSurveySubmission), ctx, surveyID, answers, userID)
}

// GetAllSurvey mocks base method.
func (m *MockICsatRepository) GetAllSurvey(ctx context.Context) ([]models.Survey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllSurvey", ctx)
	ret0, _ := ret[0].([]models.Survey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllSurvey indicates an expected call of GetAllSurvey.
func (mr *MockICsatRepositoryMockRecorder) GetAllSurvey(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllSurvey", reflect.TypeOf((*MockICsatRepository)(nil).GetAllSurvey), ctx)
}

// GetStatistics mocks base method.
func (m *MockICsatRepository) GetStatistics(arg0 context.Context, arg1 uuid.UUID) (*models.GetStatisticsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatistics", arg0, arg1)
	ret0, _ := ret[0].(*models.GetStatisticsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStatistics indicates an expected call of GetStatistics.
func (mr *MockICsatRepositoryMockRecorder) GetStatistics(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatistics", reflect.TypeOf((*MockICsatRepository)(nil).GetStatistics), arg0, arg1)
}

// GetSurvey mocks base method.
func (m *MockICsatRepository) GetSurvey(ctx context.Context, topicName string) (*models.SurveyWithQuestions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSurvey", ctx, topicName)
	ret0, _ := ret[0].(*models.SurveyWithQuestions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSurvey indicates an expected call of GetSurvey.
func (mr *MockICsatRepositoryMockRecorder) GetSurvey(ctx, topicName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSurvey", reflect.TypeOf((*MockICsatRepository)(nil).GetSurvey), ctx, topicName)
}
