// Code generated by MockGen. DO NOT EDIT.
// Source: promo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/go-park-mail-ru/2025_1_ChillGuys/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIPromoRepository is a mock of IPromoRepository interface.
type MockIPromoRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIPromoRepositoryMockRecorder
}

// MockIPromoRepositoryMockRecorder is the mock recorder for MockIPromoRepository.
type MockIPromoRepositoryMockRecorder struct {
	mock *MockIPromoRepository
}

// NewMockIPromoRepository creates a new mock instance.
func NewMockIPromoRepository(ctrl *gomock.Controller) *MockIPromoRepository {
	mock := &MockIPromoRepository{ctrl: ctrl}
	mock.recorder = &MockIPromoRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPromoRepository) EXPECT() *MockIPromoRepositoryMockRecorder {
	return m.recorder
}

// CheckPromoCode mocks base method.
func (m *MockIPromoRepository) CheckPromoCode(ctx context.Context, code string) (*models.PromoCode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckPromoCode", ctx, code)
	ret0, _ := ret[0].(*models.PromoCode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckPromoCode indicates an expected call of CheckPromoCode.
func (mr *MockIPromoRepositoryMockRecorder) CheckPromoCode(ctx, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckPromoCode", reflect.TypeOf((*MockIPromoRepository)(nil).CheckPromoCode), ctx, code)
}

// Create mocks base method.
func (m *MockIPromoRepository) Create(ctx context.Context, promo models.PromoCode) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, promo)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIPromoRepositoryMockRecorder) Create(ctx, promo interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIPromoRepository)(nil).Create), ctx, promo)
}

// GetAll mocks base method.
func (m *MockIPromoRepository) GetAll(ctx context.Context, offset int) ([]*models.PromoCode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx, offset)
	ret0, _ := ret[0].([]*models.PromoCode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockIPromoRepositoryMockRecorder) GetAll(ctx, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIPromoRepository)(nil).GetAll), ctx, offset)
}
