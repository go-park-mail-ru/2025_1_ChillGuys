// Code generated by MockGen. DO NOT EDIT.
// Source: promo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	dto "github.com/go-park-mail-ru/2025_1_ChillGuys/internal/transport/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockIPromoUsecase is a mock of IPromoUsecase interface.
type MockIPromoUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIPromoUsecaseMockRecorder
}

// MockIPromoUsecaseMockRecorder is the mock recorder for MockIPromoUsecase.
type MockIPromoUsecaseMockRecorder struct {
	mock *MockIPromoUsecase
}

// NewMockIPromoUsecase creates a new mock instance.
func NewMockIPromoUsecase(ctrl *gomock.Controller) *MockIPromoUsecase {
	mock := &MockIPromoUsecase{ctrl: ctrl}
	mock.recorder = &MockIPromoUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPromoUsecase) EXPECT() *MockIPromoUsecaseMockRecorder {
	return m.recorder
}

// CheckPromoCode mocks base method.
func (m *MockIPromoUsecase) CheckPromoCode(ctx context.Context, code string) (dto.PromoValidityResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckPromoCode", ctx, code)
	ret0, _ := ret[0].(dto.PromoValidityResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckPromoCode indicates an expected call of CheckPromoCode.
func (mr *MockIPromoUsecaseMockRecorder) CheckPromoCode(ctx, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckPromoCode", reflect.TypeOf((*MockIPromoUsecase)(nil).CheckPromoCode), ctx, code)
}

// CreatePromo mocks base method.
func (m *MockIPromoUsecase) CreatePromo(ctx context.Context, req dto.CreatePromoRequest) (dto.PromoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePromo", ctx, req)
	ret0, _ := ret[0].(dto.PromoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePromo indicates an expected call of CreatePromo.
func (mr *MockIPromoUsecaseMockRecorder) CreatePromo(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePromo", reflect.TypeOf((*MockIPromoUsecase)(nil).CreatePromo), ctx, req)
}

// GetAllPromos mocks base method.
func (m *MockIPromoUsecase) GetAllPromos(ctx context.Context, offset int) (dto.PromosResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllPromos", ctx, offset)
	ret0, _ := ret[0].(dto.PromosResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllPromos indicates an expected call of GetAllPromos.
func (mr *MockIPromoUsecaseMockRecorder) GetAllPromos(ctx, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllPromos", reflect.TypeOf((*MockIPromoUsecase)(nil).GetAllPromos), ctx, offset)
}
