// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	dto "github.com/go-park-mail-ru/2025_1_ChillGuys/internal/transport/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockIAuthUsecase is a mock of IAuthUsecase interface.
type MockIAuthUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthUsecaseMockRecorder
}

// MockIAuthUsecaseMockRecorder is the mock recorder for MockIAuthUsecase.
type MockIAuthUsecaseMockRecorder struct {
	mock *MockIAuthUsecase
}

// NewMockIAuthUsecase creates a new mock instance.
func NewMockIAuthUsecase(ctrl *gomock.Controller) *MockIAuthUsecase {
	mock := &MockIAuthUsecase{ctrl: ctrl}
	mock.recorder = &MockIAuthUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuthUsecase) EXPECT() *MockIAuthUsecaseMockRecorder {
	return m.recorder
}

// Login mocks base method.
func (m *MockIAuthUsecase) Login(arg0 context.Context, arg1 dto.UserLoginRequestDTO) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockIAuthUsecaseMockRecorder) Login(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockIAuthUsecase)(nil).Login), arg0, arg1)
}

// Logout mocks base method.
func (m *MockIAuthUsecase) Logout(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Logout", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Logout indicates an expected call of Logout.
func (mr *MockIAuthUsecaseMockRecorder) Logout(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Logout", reflect.TypeOf((*MockIAuthUsecase)(nil).Logout), arg0)
}

// Register mocks base method.
func (m *MockIAuthUsecase) Register(arg0 context.Context, arg1 dto.UserRegisterRequestDTO) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Register indicates an expected call of Register.
func (mr *MockIAuthUsecaseMockRecorder) Register(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockIAuthUsecase)(nil).Register), arg0, arg1)
}
