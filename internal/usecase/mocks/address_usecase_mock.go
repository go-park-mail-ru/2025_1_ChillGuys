// Code generated by MockGen. DO NOT EDIT.
// Source: address.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	dto "github.com/go-park-mail-ru/2025_1_ChillGuys/internal/transport/dto"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockIAddressUsecase is a mock of IAddressUsecase interface.
type MockIAddressUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIAddressUsecaseMockRecorder
}

// MockIAddressUsecaseMockRecorder is the mock recorder for MockIAddressUsecase.
type MockIAddressUsecaseMockRecorder struct {
	mock *MockIAddressUsecase
}

// NewMockIAddressUsecase creates a new mock instance.
func NewMockIAddressUsecase(ctrl *gomock.Controller) *MockIAddressUsecase {
	mock := &MockIAddressUsecase{ctrl: ctrl}
	mock.recorder = &MockIAddressUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAddressUsecase) EXPECT() *MockIAddressUsecaseMockRecorder {
	return m.recorder
}

// CreateAddress mocks base method.
func (m *MockIAddressUsecase) CreateAddress(arg0 context.Context, arg1 uuid.UUID, arg2 dto.AddressDTO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAddress", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAddress indicates an expected call of CreateAddress.
func (mr *MockIAddressUsecaseMockRecorder) CreateAddress(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAddress", reflect.TypeOf((*MockIAddressUsecase)(nil).CreateAddress), arg0, arg1, arg2)
}

// GetAddresses mocks base method.
func (m *MockIAddressUsecase) GetAddresses(arg0 context.Context, arg1 uuid.UUID) ([]dto.GetAddressResDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAddresses", arg0, arg1)
	ret0, _ := ret[0].([]dto.GetAddressResDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAddresses indicates an expected call of GetAddresses.
func (mr *MockIAddressUsecaseMockRecorder) GetAddresses(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAddresses", reflect.TypeOf((*MockIAddressUsecase)(nil).GetAddresses), arg0, arg1)
}

// GetPickupPoints mocks base method.
func (m *MockIAddressUsecase) GetPickupPoints(ctx context.Context) ([]dto.GetPointAddressResDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPickupPoints", ctx)
	ret0, _ := ret[0].([]dto.GetPointAddressResDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPickupPoints indicates an expected call of GetPickupPoints.
func (mr *MockIAddressUsecaseMockRecorder) GetPickupPoints(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPickupPoints", reflect.TypeOf((*MockIAddressUsecase)(nil).GetPickupPoints), ctx)
}
